# TODO list for devopy (prioritized, simple to advanced)

1. [x] Uruchomienie prostego shellu devopy (interaktywna pętla, komenda 'exit')
2. [x] Automatyczna instalacja paczek Python przez import (np. 'import requests')
3. [x] Zapamiętywanie zadań i zależności (ewolucja)
4. [x] Prosta heurystyka LLM do sugerowania paczek na podstawie polecenia
5. [ ] Integracja polecenia 'zadanie ...' z analizą i instalacją przez LLM
6. [ ] Testy jednostkowe dla dependency.py, evolution.py, llm.py
7. [ ] Testy E2E: shell devopy (import, zadanie, exit, sugeruj)
8. [ ] Rozszerzenie heurystyki LLM o kolejne przypadki (np. obsługa plików, bazy danych)
9. [ ] Integracja z prawdziwym LLM (OpenAI, DeepSeek, Ollama)
10. [ ] Obsługa pluginów użytkownika
11. [ ] Sandboxing kodu w Docker
12. [ ] Webowy interfejs devopy

---

TODO: DEVOPY SANDBOX/REGISTRY/LLM/DOCKER AUTOMATION
====================================================

A. Automatyzacja środowisk i zależności (sandbox, registry, orchestrator)
1. Obsługa wielu paczek w orchestratorze
2. Integracja orchestratora z sandboxem Docker
3. Automatyczny wybór paczek przez LLM (integracja z prostym modelem lub API)
4. Udostępnianie środowiska użytkownikowi (CLI, API, import w kodzie)
5. Testowanie sandboxa na różnych platformach (docker-compose)
6. Rejestr i cache środowisk (by nie powtarzać kosztownych instalacji)
7. Automatyczna aktualizacja i rollback środowisk
8. Integracja z registry Docker i PyPI
9. Automatyczne testowanie paczek w sandboxie przed udostępnieniem
10. Obsługa różnych typów środowisk (venv, docker, cloud)

B. Przykładowe komponenty do implementacji
- devopy/registry/pypi.py — obsługa instalacji z PyPI
- devopy/registry/docker.py — obsługa obrazów Docker
- devopy/sandbox/venv.py — sandbox venv
- devopy/sandbox/docker.py — sandbox docker
- devopy/llm.py — analiza polecenia i wybór paczek
- devopy/orchestrator.py — główna logika koordynująca proces
- tests/test_sandbox.py — automatyczne testy paczek

C. Scenariusze E2E
- Użytkownik wydaje polecenie przez CLI/API
- LLM wybiera paczki
- System tworzy sandbox (venv/docker), instaluje i testuje paczki
- Po pozytywnym teście środowisko udostępniane użytkownikowi
- Automatyczna aktualizacja środowisk i obsługa rollback

[EndOfDocument TODO.txt] Webowy interfejs devopy
